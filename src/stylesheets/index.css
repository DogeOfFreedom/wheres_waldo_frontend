:root {
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  color-scheme: light dark;
  color: rgba(255, 255, 255, 0.87);
  background-color: #242424;

  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  overflow-x: hidden;
}

a {
  font-weight: 500;
  color: #646cff;
  text-decoration: inherit;
}
a:hover {
  color: #535bf2;
}

body {
  margin: 0;
  display: flex;
  place-items: center;
  min-width: 320px;
  min-height: 100vh;
}

h1 {
  font-size: 3.2em;
  line-height: 1.1;
}

button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  cursor: pointer;
}

@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

@font-face {
  font-family: libreBold;
  src: url("../LibreCaslonText-Bold.ttf");
}

@font-face {
  font-family: libre;
  src: url("../LibreCaslonText-Regular.ttf");
}

body {
  font-family: libreBold;
}

.sectionHeader {
  font-size: clamp(2rem, 4vw, 4rem);
  color: black;
  margin: 0px 0px 25px 0px;
}

.screenContainer {
  width: 100vw;
  display: flex;  
  flex-direction: column;
  box-sizing: border-box;
}

.actionBtn {
  font-size: clamp(1rem, 2vw, 2.5rem);
  border-radius: 10px;
  background-color: white;
  color: black;
  padding: 10px 15px;
}

.backBtn {
  --icon: 2rem;
  --rotation: -90deg;
  
  background-color: #1c1c1c;
  padding: 0px;
  font-size: var(--icon);

  .backBtnIconContainer {
    position: relative;
  }

  .mainIcon, .iconShadow {
    transition: transform  0.1s ease-out;
  }

  .mainIcon {
    padding: 10px;
    z-index: 2;
    position: relative;
  }
  
  .iconShadow {
    --offsetX: 3px;
    --offsetY: 3px;

    z-index: 1;
    position: absolute;
    transform: translate(calc(-50% + var(--offsetX)), calc(-50% + var(--offsetY)));
    top: 50%;
    left: 50%;
    color: #E94B4B;
  }

  .rotate {
    transform: rotate(var(--rotation));
  }

  .rotateSpecial {
    transform: translate(calc(-50% + var(--offsetX)), calc(-50% + var(--offsetY))) rotate(var(--rotation));
  }
}

